<!DOCTYPE html>
<html>

<head>
  <title>Contact List</title>
  <!-- Bootstrap CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
    integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous" />
  <!-- Font Awesome CSS -->
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css"
    integrity="sha512-0vuu71zRVWl9kZwpdqA0CkOdyg/sBqs6hH+6cqjMIp14cU6fujA6YQFd6H+N3HB70AiqBX6YYamgD+R/PoLj/Q=="
    crossorigin="anonymous" referrerpolicy="no-referrer" />
  <style>
    .form-container {
      background-color: #343a40;
      padding: 20px;
      color: #fff;
    }

    .form-container .form-group {
      margin-bottom: 10px;
    }

    .form-container .form-group label {
      width: 100px;
      margin-right: 10px;
    }

    .actions {
      display: flex;
      align-items: center;
      justify-content: flex-end;
      margin-top: 10px;
    }

    .actions .btn {
      margin-left: 5px;
      padding: 5px 10px;
      font-size: 14px;
      border-radius: 4px;
    }

    .actions .btn i {
      margin-right: 5px;
    }

    .table-container {
      background-color: #f8f9fa;
      padding: 20px;
      margin-top: 20px;
    }
  </style>
  <script>
    // Show the toaster message
    function showToast() {
      const toast = document.getElementById("toast");
      const toastContainer = document.getElementById("toastContainer");
      toast.classList.add("show");
      setTimeout(() => {
        toast.classList.remove("show");
      }, 3000);
    }

    // Confirm delete contact
    function confirmDelete() {
      return confirm("Are you sure you want to delete this contact?");
    }

    // Initialize the delete buttons with confirmation
    const deleteButtons = document.querySelectorAll(".delete-button");
    deleteButtons.forEach((button) => {
      button.addEventListener("click", (e) => {
        e.preventDefault();
        if (confirmDelete()) {
          const form = button.nextElementSibling;
          form.submit();
        }
      });
    });
    function editContact(contactId) {

      fetch(`/contacts/${contactId}`)
        .then(response => response.json())
        .then(contact => {
          // Use the retrieved contact data
          console.log(contact.data);
          document.getElementById('name').value = contact.data.name;
          document.getElementById('email').value = contact.data.email;
          document.getElementById('mobile').value = contact.data.mobile;
          document.getElementById('_id').value = contact.data._id;
          // Update the form or perform any other action
        })
        .catch(error => {
          console.error('Error fetching contact:', error);
          // Handle the error
        });

    }
    function addContact() {
  // Get the input values
  const name = document.getElementById('name').value;
  const email = document.getElementById('email').value;
  const mobile = document.getElementById('mobile').value;
  const _id = document.getElementById('_id').value;
  // Create the request body
  const requestBody = {
    name: name,
    email: email,
    mobile: mobile,
    _id:_id
  };

  // Make the POST request to the server
  fetch('/contacts', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify(requestBody)
  })
  .then(response => response.json())
  .then(data => {
    if (data.statusCode === 200) {
      // Clear the form fields after successful save
      document.getElementById('name').value = '';
      document.getElementById('email').value = '';
      document.getElementById('mobile').value = '';

      // Show the success toast
      showSuccessToast(data.message);
      // Refresh the table
      refreshTable();
    } else {
      console.error('Failed to add contact:', data.message);
    }
  })
  .catch(error => {
    console.error('Error adding contact:', error);
  });
}
function showSuccessToast(message) {
  // Get the toast container and toast elements
  const toastContainer = document.getElementById('toastContainer');
  const toast = document.getElementById('toast');

  // Set the toast message
  toast.querySelector('.toast-body').textContent = message;

  // Show the toast
  toast.classList.add('show');

  // Hide the toast after 3 seconds
  setTimeout(() => {
    toast.classList.remove('show');
  }, 3000);
}
function refreshTable() {
  // Fetch the updated contact list from the server
  fetch('/contacts')
    .then(response => response.json())
    .then(data => {
      // Update the table dynamically with the updated contact list
      const contactsTable = document.getElementById('contactsTable');
      contactsTable.innerHTML = '';

      data.contacts.forEach(contact => {
        const row = document.createElement('tr');
        row.innerHTML = `
          <td>${contact.name}</td>
          <td>${contact.email}</td>
          <td>${contact.mobile}</td>
          <td>
            <a onclick="editContact('${contact._id}')" class="btn btn-primary btn-sm"><i class="fas fa-edit"></i> Edit</a>
            <a onclick="deleteContact('${contact._id}')" class="btn btn-danger btn-sm"><i class="fas fa-trash"></i> Delete</a>
          </td>
        `;

        contactsTable.appendChild(row);
      });
    })
    .catch(error => {
      console.error('Error fetching contacts:', error);
    });
}
  </script>
</head>

<body>
  <div class="container">
    <h1>Contact List - New Update V4</h1>
    <div class="form-container">
    
        <div class="row">
          <div class="col-md-3">
            <div class="form-group">
              <label for="name">Name:</label>
              <input type="text" class="form-control" id="name" name="name" required />
              <input type="hidden" class="form-control" id="_id" name="_id" />
            </div>
          </div>
          <div class="col-md-3">
            <div class="form-group">
              <label for="email">Email:</label>
              <input type="email" class="form-control" id="email" name="email" required />
            </div>
          </div>
          <div class="col-md-3">
            <div class="form-group">
              <label for="mobile">Mobile:</label>
              <input type="text" class="form-control" id="mobile" name="mobile" required />
            </div>
          </div>
          <div class="col-md-3">
            <div class="actions">
              <button type="button" class="btn btn-primary" onclick="addContact()">
                <i class="fas fa-plus"></i> Add Contact
              </button>
            </div>
          </div>
        </div>
    
    </div>

    <div class="table-container">
      <div class="input-group mb-3">
        <input type="text" class="form-control" placeholder="Search contacts" />
        <div class="input-group-append">
          <button class="btn btn-outline-secondary" type="button">
            <i class="fas fa-search"></i>
          </button>
        </div>
      </div>

      <table class="table mt-4">
        <thead>
          <tr>
            <th>Name</th>
            <th>Email</th>
            <th>Mobile</th>
            <th>Actions</th>
          </tr>
        </thead>
        <tbody>
          <% contacts.forEach(function(contact) { %>
            <tr>
              <td>
                <%= contact.name %>
              </td>
              <td>
                <%= contact.email %>
              </td>
              <td>
                <%= contact.mobile %>
              </td>
              <td>
                <a onclick="editContact('<%= contact._id %>')" class="btn btn-primary btn-sm"><i
                    class="fas fa-edit"></i> Edit</a>
                <form id="deleteForm-<%= contact._id %>" action="/contacts/<%= contact._id %>" method="POST"
                  style="display: inline-block" onsubmit="return confirmDelete()">
                  <input type="hidden" name="_method" value="DELETE" />
                  <button type="submit" class="btn btn-danger btn-sm delete-button">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                </form>
              </td>
            </tr>
            <% }) %>
        </tbody>
      </table>
    </div>
  </div>
  <div id="toastContainer" class="toast-container">
    <div id="toast" class="toast" role="alert" aria-live="assertive" aria-atomic="true">
      <div class="toast-header">
        <strong class="mr-auto">Success</strong>
        <button type="button" class="ml-2 mb-1 close" data-dismiss="toast" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <div class="toast-body">Contact added successfully!</div>
    </div>
  </div>
  <!-- Bootstrap JS -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
    integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm"
    crossorigin="anonymous"></script>
  <!-- Font Awesome JS -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/js/all.min.js"
    integrity="sha512-+gTkFVkOWxh/2DJ+6UdkdwdLjONz7a0FXpDfX9jLhPfZt7sBtFaRZFWjVTBCOYfsTc3OJKBrThddNkECV9ZuHg=="
    crossorigin="anonymous" referrerpolicy="no-referrer"></script>
</body>

</html>